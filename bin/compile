#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

#set -x

mktmpdir() {
  dir=$(mktemp -t node-$1-XXXX)
  rm -rf $dir
  mkdir -p $dir
  echo $dir
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

# parse and derive params
#EC_PLATFORM=macosx-x86-64
EC_PLATFORM=linux-x86-64
EC_ARCHIVE=Eiffel_14.05_gpl_95417-$EC_PLATFORM.tar.bz2
EC_BUILD=http://sourceforge.net/projects/eiffelstudio/files/EiffelStudio%2014.05/Build_95417/
BUILDPACK_DIR=$(cd $(dirname $0); cd ..; pwd) # absolute path of buildpack
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

echo "-----> compile params: $BUILD_DIR $CACHE_DIR $ENV_DIR"

if [ $RESET_CACHE ]; then
  echo "-----> flushing cache"
  rm -rf $CACHE_DIR/*
fi

EC_DIR="$CACHE_DIR/estudio"

echo "-----> Checking Eiffel Compiler"
if [ ! -d $EC_DIR ]; then
    echo "Fetching Eiffel Compiler" | indent
    mkdir -p $EC_DIR
	curl -L -O $EC_BUILD$EC_ARCHIVE 
	tar jxf $EC_ARCHIVE -C $EC_DIR
	rm -rf $EC_ARCHIVE
	cp $EC_DIR $BUILD_DIR
fi

ISE_EIFFEL=$EC_DIR/Eiffel_14.05
ISE_PLATFORM=$EC_PLATFORM
PATH=$ISE_EIFFEL/studio/spec/$ISE_PLATFORM/bin:$PATH

echo "Eiffel Compiler installed" | indent

EC_CONFIG=$(find $BUILD_DIR -maxdepth 1 -name "*.ecf" -print -quit | head -n 1)
EC_TARGET=$(sed -n 's/.*target name="\([A-z]*\).*/\1/p' <$EC_CONFIG | head -n 1)
EC_TARGET=roc_api

echo "-----> Compiling $EC_CONFIG for target $EC_TARGET"

export ISE_EIFFEL
export ISE_PLATFORM

ec -finalize -config $EC_CONFIG -target $EC_TARGET

cd /app/tmp/repo.git/EIFGENs/$EC_TARGET/F_code
finish_freezing
chmod a+x $EC_TARGET
cp $EC_TARGET $BUILD_DIR
cd $BUILD_DIR

